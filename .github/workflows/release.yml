name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build for ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: yt-agent-linux-x64
            bin_name: yt-agent
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: yt-agent-windows-x64.exe
            bin_name: yt-agent.exe
          - os: macos-14
            target: aarch64-apple-darwin
            artifact_name: yt-agent-macos-arm64
            bin_name: yt-agent

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Prepare artifact
        run: |
          cd target/${{ matrix.target }}/release
          mv "${{ matrix.bin_name }}" "${{ matrix.artifact_name }}"
        shell: bash

      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}